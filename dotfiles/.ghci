:set stop :list

:set -fno-warn-overlapping-patterns -w -fwarn-unused-binds
:set -fwarn-unused-imports
:set -fwarn-incomplete-patterns
:set -fno-monomorphism-restriction

-- use (?foo x y z) in a sub-expression to get the type of the expr
:set -XImplicitParams

-- :R is the same as :r
:def R (\args -> return (":r " ++ args))

-- :L loads the file currently edited in vim

-- Foo/Bar.hs -> Foo.Bar
let mangle_file = map (\c -> if c == '/' then '.' else c) . System.FilePath.dropExtension

let load_vim = do { home <- System.Environment.getEnv "HOME"; file <- readFile (home ++ "/.vim/current_hs"); return (":load " ++ mangle_file file) }

:def L (\_ -> load_vim)
